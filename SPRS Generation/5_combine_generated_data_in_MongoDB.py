from pymongo import MongoClient
from pymongo.errors import PyMongoError

def combine_generated_data():
    """
    Compare whether the doc_id is the same, and merge the propaganda, reason,
    and score generated by different promotional tags into a new collection.
    """

    client = MongoClient('mongodb://localhost:27017')
    # Define collections
    db = client['Propaganda_News']
    collection1 = db['PROPANEWS_train_Summarize_Propaganda_Loaded_Language_score']
    collection2 = db['PROPANEWS_train_Summarize_Propaganda_Exaggeration_score']
    collection3 = db['PROPANEWS_train_Summarize_Propaganda_Appeal_to_Fear_score']
    new_collection = db['PROPANEWS_train_Summarize_Propaganda_LL_E_AF_score']


    for doc1 in collection1.find():
        # Attempt to find matching documents in the second and third collections
        doc2 = collection2.find_one({'doc_id': doc1['doc_id']})
        doc3 = collection3.find_one({'doc_id': doc1['doc_id']})

        # Proceed only if matching documents are found in both collections
        if doc2 and doc3:
            # Prepare a new document by merging attributes from all three documents
            new_doc = {
                'doc_id': doc1['doc_id'],
                'news_label': doc1['news_label'],
                'original_txt': doc1['original_txt'],
                'prop_label_1': doc1['prop_label'],
                'prop_txt_1': doc1['prop_text'],
                'prop_score_1': doc1['prop_score'],
                'reason_1': doc1['generate_explanation'],
                'prop_label_2': doc2['prop_label'],
                'prop_txt_2': doc2['prop_text'],
                'prop_score_2': doc2['prop_score'],
                'reason_2': doc2['generate_explanation'],
                'prop_label_3': doc3['prop_label'],
                'prop_txt_3': doc3['prop_text'],
                'prop_score_3': doc2['prop_score'],
                'reason_3': doc3['generate_explanation']
            }

            # Insert the new document into the new collection
            new_collection.insert_one(new_doc)
    print("Finish combination")

combine_generated_data()




